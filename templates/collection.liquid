<div class="container-xxl mb-5 py-5">
{%  paginate collection.products by 12 %}  
<div class="row d-flex">
  <div class="col-12 d-flex col-md-6 col-lg-6 justify-content-end">
    <h1>OUR {{ collection.title }} </h1>
  </div>

  <div class="col-12 col-md-6 col-lg-3 justify-content-start">
  {% comment %}
    
  {% endcomment %}
  <select class="border border-primary form-select form-select-lg mb-5" aria-label=".form-select-lg example" id="sort-by">
  {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
  {% for option in collection.sort_options %}
    <option value="{{ option.value }}" {% if option.value == sort_by %}selected="selected"{% endif %}>
      {{ option.name }}
    </option>
  {% endfor %}
  </select>
  </div>

</div>



  <div class="row g-3 d-flex">
    {% for product in collection.products %}
      {% render 'product-item', product: product %}
    {% endfor %}
  </div>

 {% render 'pagination', paginate: paginate %}
  {% endpaginate %}
</div>

<script>
  Shopify.queryParams = {};

  // Preserve existing query parameters
  if (location.search.length) {
    var params = location.search.substr(1).split('&');

    for (var i = 0; i < params.length; i++) {
      var keyValue = params[i].split('=');

      if (keyValue.length) {
        Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
      }
    }
  }

  // Update sort_by query parameter on select change
  document.querySelector('#sort-by').addEventListener('change', function(e) {
    var value = e.target.value;

    Shopify.queryParams.sort_by = value;
    location.search = new URLSearchParams(Shopify.queryParams).toString();
  });
</script>